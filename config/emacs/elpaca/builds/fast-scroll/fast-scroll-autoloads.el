;;; fast-scroll-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:



;;; Generated autoloads from fast-scroll.el

(autoload 'fast-scroll-config "fast-scroll" "\
Load some config defaults / binds." t)
(autoload 'fast-scroll-advice-scroll-functions "fast-scroll" "\
Wrap as many scrolling functions that we know of in this advice." t)
(defvar fast-scroll-mode nil "\
Non-nil if Fast-Scroll mode is enabled.
See the `fast-scroll-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `fast-scroll-mode'.")
(custom-autoload 'fast-scroll-mode "fast-scroll" nil)
(autoload 'fast-scroll-mode "fast-scroll" "\
Minor mode to speed up scrolling.

When fast-scroll-mode is on, certain features/modes of Emacs will be
shut off or minimized during the scrolling activity, to ensure
the user experience the least amount of scroll-lag as possible.

By default, enabling this global minor mode will advice the following
scrolling built-ins (or commonly installed scroll functions): `scroll-up-command',
`scroll-down-command', `evil-scroll-up', `evil-scroll-down'.

Disabling this mode will unload the advice that was added when enabling.

The mode-line format will also be set to a minimal mode-line
during scrolling activity.

This is a global minor mode.  If called interactively, toggle the
`Fast-Scroll mode' mode.  If the prefix argument is positive, enable the
mode, and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable the
mode if ARG is nil, omitted, or is a positive number.  Disable the mode
if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `(default-value \\='fast-scroll-mode)'.

The mode's hook is called both when the mode is enabled and when it is
disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "fast-scroll" '("fast-scroll-"))

;;; End of scraped data

(provide 'fast-scroll-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; fast-scroll-autoloads.el ends here
